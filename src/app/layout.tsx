import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Providers from "./providers";
import Navbar from "@/components/ui/Navbar";
import Footer from "@/components/ui/Footer";
import CategoryList from "@/components/ui/CategoryList";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
});

export const metadata: Metadata = {
  title: "Kris.dev Creative Log",
  description: "Generated by create next app",
  icons: {
    icon: [
      { url: '/brandImages/1.jpg' },
    ],
    apple: [
      { url: '/brandImages/1.jpg' },
    ],
  },
  manifest: '/favicon/site.webmanifest',
};

/**
 * Root Layout Component
 * 
 * This layout implements a sticky footer pattern using flexbox:
 * 
 * 1. Container Structure:
 *    - min-h-screen: Ensures container is at least viewport height
 *    - flex flex-col: Creates a vertical flex container
 *    - This combination allows content to push footer down when needed
 * 
 * 2. Main Content Area:
 *    - flex-grow: Takes up all available space
 *    - Pushes footer down when content is short
 *    - Allows content to expand naturally when long
 * 
 * 
 * Benefits of this approach:
 * - No fixed positioning needed
 * - Works with dynamic content
 * - Maintains accessibility
 * - Responsive by default
 * - No JavaScript required
 */

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" className="light">
      <body className={`${inter.variable} min-h-screen flex flex-col`}>
        <Providers>
          {/* Header */}
          <header>
            <Navbar />
            <CategoryList />
          </header>

          {/* Main */}
          <main className="flex-grow">
            {children}
          </main>

          {/* Footer */}
          <footer>
            <Footer />
          </footer>
        </Providers>
      </body>
    </html>
  );
}
